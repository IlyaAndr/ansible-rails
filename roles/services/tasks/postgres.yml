---
# file: roles/services/tasks/postgres.yml

- name : setup postgres
  command: postgresql-setup initdb
  args:
    creates: /var/lib/pgsql/data/PG_VERSION
  tags: postgresql-server

- name : send pg_hba.conf
  template: src=../templates/pg_hba.conf.j2 dest=/var/lib/pgsql/data/pg_hba.conf
  args:
    mode: 0600
    owner: postgres
    group: postgres
  tags: postgresql-server
  notify:
    - restart postgresql

- name : send postgres.conf
  copy: src=../files/postgresql.conf dest=/var/lib/pgsql/data/postgresql.conf
  args:
    mode: 0600
    owner: postgres
    group: postgres
  tags: postgresql-server
  notify:
    - restart postgresql

- name: start postgresql service
  service: name=postgresql state=started
  args:
    enabled: true
  tags: postgresql-server

- name: make backup folder
  command: "/bin/bash -c  'mkdir -p /var/backups; chown postgres /var/backups; touch /var/backups/postgres.pgdump.gz'"
  args:
    creates: /var/backups/postgres.pgdump.gz
  tags: postgresql-server

- name: send backup rotate
  copy: src=../files/postgres-bk.logrotate dest=/etc/logrotate.d/postgres-bk
  args:
    mode: 644
  tags: postgresql-server

- include_vars: "group_vars/{{ myapp_env }}.yml"
  tags: postgresql-server

- name: "create myapp_{{ RAILS_ENV }} db"
  postgresql_db:
  args:
    name: "myapp_{{ RAILS_ENV }}"
    encoding: 'UTF-8'
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
  tags: postgresql-server

- name: create myapp db user
  postgresql_user: name=myapp 
  args: 
    db: "myapp_{{ RAILS_ENV }}"
    password: "{{ postgres_password }}"
    role_attr_flags: SUPERUSER
  tags: postgresql-server

- name: open port 5432
  firewalld: service=postgresql
  args:
    permanent: true 
    state: enabled  
    zone: internal
  notify:
    - reload firewall rules
  tags: postgresql-server